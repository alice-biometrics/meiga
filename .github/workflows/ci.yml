name: ci

on:
  pull_request:
    paths-ignore:
      - '*.md'
      - 'VERSION'
    branches:
      - main

jobs:
  ci:
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13-dev"]
    runs-on: ${{matrix.os}}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
        cache-dependency-path: pyproject.toml
    - uses: astral-sh/setup-uv@v2
    - name: Setup venv
      run: |
         uv venv .venv
         echo "VIRTUAL_ENV=.venv" >> $GITHUB_ENV
         echo "$PWD/.venv/bin" >> $GITHUB_PATH
         mkdir -p $(pip cache dir)
    - name: Install dependencies
      run: |
        uv pip install lume
        lume -install
    - name: Lint
      run: lume -lint
    - name: Static Analysis
      run: lume -static-analysis
    - name: Tests
      run: lume -test
    - name: Check Installation (--no-binary)
      run: lume -check-no-binary-installation
  test-imports:
    strategy:
      matrix:
        os: [ macOS-latest, ubuntu-latest ]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13-dev"]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: astral-sh/setup-uv@v2
      - name: Setup venv
        run: |
          uv venv .venv
          echo "VIRTUAL_ENV=.venv" >> $GITHUB_ENV
          echo "$PWD/.venv/bin" >> $GITHUB_PATH
          mkdir -p $(pip cache dir)
      - name: Install latest version of meiga from code (without other dependencies as lume)
        run: uv pip install -e .
      - name: Check imports
        run: python -c "from meiga import Error, Success, Failure, Result, early_return, async_early_return"
