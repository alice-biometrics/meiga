name: Feature Request
description: Suggest an idea or ask for a feature that you would like to have in meiga.
labels: [enhancement]
body:
  - type: markdown
    attributes:
      value: |
        The `meiga üßô` community is glad to see you here. Your help is greatly appreciated.

        Please follow these instructions, fill every question, and do every step. üôè
        
        This will help `meiga üßô` community to add new features, fix bug, review pull requests, etc.

  - type: checkboxes
    id: checks
    attributes:
      label: First Check
      description: Please confirm and check all the following options.
      options:
        - label: I added a very descriptive title to this issue.
          required: true
        - label: I used the GitHub search to find a similar issue and didn't find it.
          required: true
        - label: I already read and followed all the [documentation](https://alice-biometrics.github.io/meiga/) and didn't find an answer.
          required: true
  - type: checkboxes
    id: help
    attributes:
      label: Commit to Help
      description: |
        After submitting this, I commit to one of:
          * Read open issues with questions until I find 2 issues where I can help someone and add a comment to help there.
          * I already hit the "watch" button in this repository to receive notifications and I commit to help at least 2 people that ask questions in the future.
          * Implement a Pull Request for a confirmed bug.
      options:
        - label: I commit to help with one of those options üëÜ
          required: true
  - type: textarea
    id: example
    attributes:
      label: Example Code
      description: |
        Please add a self-contained, [minimal, reproducible, example](https://stackoverflow.com/help/minimal-reproducible-example) with your use case.

        If we can copy it, run it, and see it right away, there's a much higher chance we will be able to help you.

      placeholder: |        
        from meiga import Success

        result = Success("hi")

      render: python
    validations:
      required: true
  - type: textarea
    id: description
    attributes:
      label: Description
      description: |
        What is your feature request?

        Write a short description telling me what you are trying to solve and what you are currently doing.
      placeholder: |
        * Using `Result` class
        * I would like it to have an extra parameter to configure unions.
        * This could be useful to ... whatever
    validations:
      required: true
  - type: textarea
    id: wanted-solution
    attributes:
      label: Wanted Solution
      description: |
        Tell me what's the solution you would like.
      placeholder: |
        I would like it to have a `maintainer` parameter that defaults to `None`, and can be set to a `str` (`<MY-TEAM-NAME>`).
    validations:
      required: true
  - type: textarea
    id: wanted-code
    attributes:
      label: Wanted Code
      description: Show me an example of how you would want the code to look like.
      placeholder: |
        from meiga import Result

        result = Result(...)
        
      render: python
    validations:
      required: true
  - type: textarea
    id: alternatives
    attributes:
      label: Alternatives
      description: |
        Tell me about alternatives you've considered.
      placeholder: |
        Define a possible union with an environment variable (`MEIGA_ALLOWED_UNION`)
  - type: dropdown
    id: os
    attributes:
      label: Operating System
      description: What operating system are you on?
      multiple: true
      options:
        - Linux
        - Windows
        - macOS
        - Other
    validations:
      required: true
  - type: textarea
    id: os-details
    attributes:
      label: Operating System Details
      description: You can add more details about your operating system here, in particular if you chose "Other".
  - type: input
    id: meiga-version
    attributes:
      label: meiga Version
      description: |
        What meiga version are you using?

        You can find the meiga version with:

        ```bash
        >> python -c "import meiga; print(meiga.__version__)"
        ```
    validations:
      required: true
  - type: input
    id: python-version
    attributes:
      label: Python Version
      description: |
        What Python version are you using?

        You can find the Python version with:

        ```bash
        python --version
        ```
    validations:
      required: true
  - type: textarea
    id: context
    attributes:
      label: Additional Context
      description: Add any additional context information or screenshots you think are useful.
