[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "meiga"
dynamic = ["version"]
description = "A simple, typed and monad-based Result type for Python"
readme = "README.md"
license = "MIT"
authors = [
    { name = "Alice Biometrics", email = "support@alicebiometrics.com" },
]
keywords = [
    "Monad",
    "Result",
    "Typed",
    "Typing",
    "result-type"
]
classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: MIT License",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = '>=3.7'
dependencies = [
    "typing-extensions; python_version < \"3.10\"",
]

[project.urls]
Homepage = "https://github.com/alice-biometrics/meiga"
Documentation = "https://alice-biometrics.github.io/meiga/"

[project.optional-dependencies]

dev = [
    "pytest >=7.1.3,<8.0.0",
    "pytest-cov >=4.0.0,<5.0.0",
    "pytest-mock >=3.10.0,<4.0.0",
    "pytest-env >=0.8.1,<1.0.0",
    "pytest-variables[yaml] >=2.0.0,<3.0.0",
    "pytest-clarity >=1.0.1,<2.0.0",
    "hypothesis >=6.56.3,<7.0.0",
    "mypy ==0.982",
    "ruff ==0.0.239",
    "black == 23.1.0",
    "isort[colors] >=5.10.1,<6.0.0",
    "pre-commit >=2.20.0,<3.0.0",
    "pip-audit >=2.4.14,<3.0.0",
    "pyupgrade>=3.2.0"
    #"coverage[toml] >= 6.5.0,< 8.0",
]
doc = [
    "mkdocs >=1.1.2,<2.0.0",
    "mkdocs-material >=8.1.4,<9.0.0",
    "mdx-include >=1.4.1,<2.0.0",
    "mkdocs-markdownextradata-plugin >=0.1.7,<0.3.0",
    "ansi2html",
    "markdown-include",
    "mdx-truly-sane-lists",
    "mkdocs-exclude",
    "mkdocstrings"
]

[tool.hatch.version]
path = "meiga/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/meiga",
]


[tool.pytest.ini_options]
markers=["unit", "property"]
addopts=["tests",
        "-v",
        "--color=yes",
        "--durations=10"
]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning"
]
python_files=["test_*.py"]
python_classes=["Test*"]
python_functions=["test_*", "should_*"]
norecursedirs = [
    "output",
    ".mypy_cache",
    ".github",
    ".hypothesis",
    "meiga",
    "samples",
    "*.egg-info",
    "dist",
    ".git"
]


[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"meiga/__init__.py" = ["F403"]
"tests/unit/test_result_match.py" = ["E999"]


[tool.isort]
profile = "black"
